classes:
- service.docker.host
- service.haproxy.proxy.single
- service.keepalived.cluster.single
- service.opencontrail.control.analytics
- system.haproxy.proxy.listen.opencontrail.analytics
parameters:
  _param:
    opencontrail_kafka_config_dir: '/usr/share/kafka/config'
    opencontrail_kafka_log_cleanup_mtime: '+7'
    opencontrail_kafka_log_dir: '/usr/share/kafka/logs'
    opencontrail_host_analyticsdb_log_dir: '/var/log/analyticsdb'
    opencontrail_cassandra_log_dir: '/var/log/cassandra'
    opencontrail_zookeeper_log_dir: '/var/log/zookeeper'
    opencontrail_version: 4.0
    linux_repo_contrail_component: oc40
    opencontrail_image_tag: latest
    opencontrail_message_queue_node01_address: ${_param:openstack_message_queue_node01_address}
    opencontrail_message_queue_node02_address: ${_param:openstack_message_queue_node02_address}
    opencontrail_message_queue_node03_address: ${_param:openstack_message_queue_node03_address}
    opencontrail_message_queue_address: ${_param:openstack_message_queue_address}
    opencontrail_message_queue_password: guest
    opencontrail_analytics_image: ${_param:mcp_docker_registry}/opencontrail-${_param:linux_repo_contrail_component}/opencontrail-analytics:${_param:opencontrail_image_tag}
    opencontrail_analyticsdb_image: ${_param:mcp_docker_registry}/opencontrail-${_param:linux_repo_contrail_component}/opencontrail-analyticsdb:${_param:opencontrail_image_tag}
    opencontrail_analytics_container_name: opencontrail_analytics_1
    opencontrail_analyticsdb_container_name: opencontrail_analyticsdb_1
# Temprorary fix for MOS9 packages to pin old version of kafka
  linux:
    system:
      kernel:
        modules:
        - nf_conntrack_ipv4
      job:
        kafka_logs_cleanup:
          command: "find ${_param:opencontrail_kafka_log_dir} -name '*.log.*' -type f -mtime ${_param:opencontrail_kafka_log_cleanup_mtime} -exec rm {} \\;"
          identifier: kafka_logs_cleanup
          hour: 0
          minute: 0
  opencontrail:
    common:
      config_only: true
      identity:
        host: ${_param:openstack_control_address}
      network:
        host: ${_param:openstack_control_address}
    collector:
      role: ${_param:opencontrail_node_role}
      config_only: true
      discovery:
        host: None
      identity:
        host: ${_param:openstack_control_address}
      analytics:
        members:
        - host: ${_param:opencontrail_analytics_node01_address}
        - host: ${_param:opencontrail_analytics_node02_address}
        - host: ${_param:opencontrail_analytics_node03_address}
      message_queue:
        host: ${_param:opencontrail_message_queue_address}
        password: ${_param:opencontrail_message_queue_password}
        members:
        - host: ${_param:opencontrail_message_queue_node01_address}
        - host: ${_param:opencontrail_message_queue_node02_address}
        - host: ${_param:opencontrail_message_queue_node03_address}
      config:
        members:
        - host: ${_param:opencontrail_control_node01_address}
        - host: ${_param:opencontrail_control_node02_address}
        - host: ${_param:opencontrail_control_node03_address}
    database:
      analyticsdb_log_dir: ${_param:opencontrail_host_analyticsdb_log_dir}
      config_only: true
      discovery:
        host: None
      analytics:
        members:
        - host: ${_param:opencontrail_analytics_node01_address}
        - host: ${_param:opencontrail_analytics_node02_address}
        - host: ${_param:opencontrail_analytics_node03_address}
  docker:
    client:
      compose:
        opencontrail:
          status: up
          pull: true
          service:
            analytics:
              image: ${_param:opencontrail_analytics_image}
              container_name: ${_param:opencontrail_analytics_container_name}
              network_mode: "host"
              privileged: true
              restart: always
              volumes:
                - /etc/contrail:/etc/contrail
                - /etc/redis/redis.conf:/etc/redis/redis.conf
                - /var/log/contrail:/var/log/contrail
                - /var/log/journal/contrail-analytics:/var/log/journal
              env_file:
                - contrail.env
            analyticsdb:
              image: ${_param:opencontrail_analyticsdb_image}
              container_name: ${_param:opencontrail_analyticsdb_container_name}
              volumes:
                - /etc/cassandra/cassandra-env-analytics.sh:/etc/cassandra/cassandra-env.sh
                - /etc/cassandra/cassandra_analytics.yaml:/etc/cassandra/cassandra.yaml
                - /etc/cassandra/logback.xml:/etc/cassandra/logback.xml
                - /etc/contrail:/etc/contrail
                - /var/lib/analyticsdb:/var/lib/cassandra
                - /var/lib/analyticsdb_zookeeper_data:/var/lib/zookeeper
                - /var/lib/zookeeper/myid:/var/lib/zookeeper/myid
                - ${_param:opencontrail_kafka_config_dir}/server.properties:${_param:opencontrail_kafka_config_dir}/server.properties
                - ${_param:opencontrail_kafka_config_dir}/consumer.properties:${_param:opencontrail_kafka_config_dir}/consumer.properties
                - ${_param:opencontrail_kafka_config_dir}/zookeeper.properties:${_param:opencontrail_kafka_config_dir}/zookeeper.properties
                - ${_param:opencontrail_kafka_log_dir}:${_param:opencontrail_kafka_log_dir}
                - /etc/zookeeper/conf/zoo_analytics.cfg:/etc/zookeeper/conf/zoo.cfg
                - /etc/zookeeper/conf/log4j.properties:/etc/zookeeper/conf/log4j.properties
                - /var/log/contrail:/var/log/contrail
                - /var/log/journal/contrail-analyticsdb:/var/log/journal
                - ${_param:opencontrail_host_analyticsdb_log_dir}/cassandra:${_param:opencontrail_cassandra_log_dir}
                - ${_param:opencontrail_host_analyticsdb_log_dir}/zookeeper:${_param:opencontrail_zookeeper_log_dir}
              network_mode: "host"
              privileged: true
              restart: always
              env_file:
                - contrail.env
